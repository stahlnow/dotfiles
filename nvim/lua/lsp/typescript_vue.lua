-- Vue.js lsp setup .. wohoooo!
-- configuration: https://github.com/vuejs/language-tools/wiki/Neovim#configurationSection

-- THIS NEEDS REVIEW / FIXING: its messing up javascript eslint rules WTF!?

-- local vue_language_server_path = vim.fn.stdpath("data")
-- 	.. "/mason/packages/vue-language-server/node_modules/@vue/language-server"
--
-- local tsserver_filetypes = { "typescript", "javascript", "javascriptreact", "typescriptreact", "vue" }
--
-- local vue_plugin = {
-- 	name = "@vue/typescript-plugin",
-- 	location = vue_language_server_path,
-- 	languages = { "vue" },
-- 	configNamespace = "typescript",
-- }
--
-- local vtsls_config = {
-- 	settings = {
-- 		vtsls = {
-- 			tsserver = {
-- 				globalPlugins = {
-- 					vue_plugin,
-- 				},
-- 			},
-- 		},
-- 	},
-- 	filetypes = tsserver_filetypes,
-- }
--
-- local ts_ls_config = {
-- 	cmd = { "typescript-language-server", "--stdio" },
-- 	init_options = {
-- 		plugins = {
-- 			vue_plugin,
-- 		},
-- 	},
-- 	on_attach = function(client)
-- 		-- optional: disable tsserver formatting as we use prettier
-- 		client.server_capabilities.documentFormattingProvider = false
-- 	end,
-- 	filetypes = tsserver_filetypes,
-- }
--
-- -- straight copy from here: https://github.com/neovim/nvim-lspconfig/blob/master/lsp/vue_ls.lua
-- local vue_ls_config = {}
--
-- -- assign configs
-- vim.lsp.config("vtsls", vtsls_config)
-- vim.lsp.config("ts_ls", ts_ls_config)
-- vim.lsp.config("vue_ls", vue_ls_config)

-- enable servers
-- vim.lsp.enable({ "vtsls", "vue_ls" }) -- If using `ts_ls` replace `vtsls` to `ts_ls`
