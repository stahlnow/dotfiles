# SWAY BABY SWAY
input * xkb_layout "ch_modified"
input * xkb_options "ctrl:nocaps" 

set $mod Mod1
set $win Mod4
set $ctrl Control

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango:FuraCode Nerd Font 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal with working directory
bindsym $mod+Return exec alacritty --working-directory $(~/.config/sway/focused-cwd)
# start a terminal in a tab (not perfect solution)
bindsym $mod+Shift+Return exec "swaymsg focus parent && swaymsg layout tabbed > /dev/null && swaymsg exec -- alacritty"

# kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+F4      kill

# start dmenu (a program launcher)
bindsym $mod+d exec j4-dmenu-desktop --dmenu="dmenu -i -nf '#ffffff' -nb '#000000' -sb '#22ff22' -sf '#000000' -fn 'FuraCode Nerd Font-9' -p 'dmenu '"

# change focus
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
#bindsym $mod+k focus up
#bindsym $mod+odiaeresis focus right

# alternatively, you can use the cursor keys:
#bindsym $mod+Left focus left
#bindsym $mod+Down focus down
#bindsym $mod+Up focus up
#bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
#bindsym $mod+Shift+odiaeresis move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $win+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child
#

# i3-easyfocus window
# bindsym $mod+s exec --no-startup-id i3-easyfocus -c --color-unfocused-bg 00ff00 --color-unfocused-fg 000000 --color-focused-bg 00ff00 --color-focused-fg 000000 --font pango:monospace


# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

#bindsym $ctrl+1 workspace $ws1
#bindsym $ctrl+2 workspace $ws2
#bindsym $ctrl+3 workspace $ws3
#bindsym $ctrl+4 workspace $ws4
#bindsym $ctrl+5 workspace $ws5
#bindsym $ctrl+6 workspace $ws6
#bindsym $ctrl+7 workspace $ws7
#bindsym $ctrl+8 workspace $ws8
#bindsym $ctrl+9 workspace $ws9


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# Lock screen
bindsym $win+l exec swaylock -i $HOME/pics/himawari.png

# restart
bindsym $mod+Shift+r exec "swaymsg reload"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow width 10 px or 10 ppt
        bindsym h resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"


set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {

    bindsym l exec --no-startup-id i3lock -i $HOME/pics/himawari.png, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id sudo systemctl suspend, mode "default"
    bindsym h exec --no-startup-id sudo systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id sudo systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id shutdown -h now, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Delete mode "$mode_system"

bar {
    swaybar_command waybar
}
#bar {
    #position top
    #status_command while ~/.config/sway/scripts/sway_bar.sh; do sleep 1; done

    #colors {
        #statusline #ffffff
        #background #000000AA
        #focused_workspace #000000 #000000ee #ffffffff
        #inactive_workspace #333333AA #333333AA #5c5c5cAA
    #}
#}

# The middle button over a titlebar kills the window
bindsym --release button2 kill
# The middle button and a modifer over any part of the window kills the window
bindsym --whole-window $mod+button2 kill

#bindsym --whole-window button2 focus left
#bindsym --whole-window button2+j focus left
#bindsym --whole-window button2+k focus right

# Alt+Tab quickly switsch workspaces
bindsym $mod+Tab workspace back_and_forth

# Startup applications

# start xbindkeys for workspace shortcuts, see ~/.xbindkeysrc config
# exec --no-startup-id xbindkeys

# auto mount with udiskie
exec --no-startup-id udiskie -ans &

# turn off screensaver and energy star
# TODO replace with wayland utils?
#exec xset s off
#exec xset -dpms

# notification daemon
exec -no-startup-id mako

# start a terminal
exec alacritty

# start messenger softwares
#exec skypeforlinux
#exec --no-startup-id franz
#exec --no-startup-id slack
#exec --no-startup-id signal-desktop --start-in-tray

# GNOME power manager
#exec_always --no-startup-id gnome-power-manager

# polkit-gnome: Starts authentication-agent needed to get sudo password check aviable for GUIs needing it.
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +1% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -1% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec light -A 5  # increase screen brightness
bindsym XF86MonBrightnessDown exec light -U 5 # decrease screen brightness

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Screenshot
# save region as file
bindsym --release $ctrl+Print exec --no-startup-id slurp -d | grim -g - $(xdg-user-dir DOWNLOAD)/screenshots/$(date +'screenshot_%Y-%m-%d-%H%M%S.png')
# copy region to clipboard
bindsym --release Print exec --no-startup-id grim -g "$(slurp -d)" - | wl-copy

##############################################################
# LAYOUT AND STYLE
##############################################################
# Colors
# class                 border  bground text    indicator child_border
client.focused          #00ff00 #00ff00 #000000 #2E9EF4   #00ff00
client.unfocused        #333333 #222222 #888888 #292D2E   #222222
client.urgent           #ff00ff #900000 #FFFFFF #900000   #900000
client.placeholder      #00ff00 #0C0C0C #FFFFFF #000000   #0C0C0C
client.background       #FFFFFF


# Force tabbed layout for all other new windows
# for_window [class="[.]*"] layout tabbed, border pixel 2

# Focus window on activation
focus_on_window_activation focus

# Enable floating for dialog, etc.
for_window [window_role="^(bubble|pop-up|task_dialog|dialog|menu)$"] floating enable, border pixel 2
for_window [title="Preferences$"] floating enable, border pixel 2

# supercollider
for_window [title="^(.*Plot.*|Stethoscope|.*plot.*)$"] floating enable, border pixel 2

# Always float these applications.
for_window [app_id="^(qjackctl|pavucontrol)$"] floating enable, border pixel 2 
for_window [class="^(Gpredict)$"] floating enable, border pixel 2


for_window [app_id="Alacritty"] border pixel 1

# Browser on workspace 2
for_window [class="Chromium"] move to workspace $ws2

# Other software on workspace 3
for_window [class="^(Kicad)$"] move to workspace $ws3
# for_window [app_id="^(evince)$"] move to workspace $ws3

# Chat and Sound on workspace 4/5
for_window [class="^(Spotify)$"] move to workspace $ws4
for_window [class="^(Slack|Skype|Signal)$"] move to workspace $ws5

#for_window [class="[.]*"] floating enable, border pixel 0
#for_window [class="[.]*"] floating enable, border pixel 0, resize set 1601 870, move position 0 30
#for_window [class="[.]*"] layout tabbed, resize set 1600 870, move position 0 30

# hide titlebars
default_border none
#hide_edge_borders both
#hide_edge_borders smart 
#hide_edge_borders --i3 both
#hide_edge_borders --i3 smart

# Add gaps
gaps inner 5
gaps outer 3

# Only enable gaps on a workspace when there is at least one container
smart_gaps on

# Activate smart borders (always)
smart_borders on

# Activate smart borders (only when there are effectively no gaps)
smart_borders no_gaps


# include local configs
include /home/stahl/.config/sway/config.d/*

