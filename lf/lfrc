# interpreter for shell commands (needs to be POSIX compatible)
#set shell sh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10

# refresh lf every second
set period 1

# style
set icons on
set color256 on

set nopreview
set ratios 1
set info size:time

set incsearch

set previewer ~/.config/lf/pv.sh

################################## cmd and mappings ##############################
# toggle single column view
cmd no_preview :{{
    set nopreview
    set ratios 1
    set info size:time
    map t yes_preview
}}
cmd yes_preview :{{
    set ratios 1:2:3
    set preview
    set info
    map t no_preview
}}
map t yes_preview

# use enter for shell commands
# map <enter> shell
map <enter> :open

# b open bookmarks
map b mark-load

map gh :cd ~; set sortby natural; set reverse!;
map gi :cd ~/incoming; set sortby time; set reverse
map gs :cd ~/music;
map gm :cd /run/media/stahl

# view images in folder
map V $imv -d -s shrink .

########## Midnight Commander mappings ###############
map <f-2> rename

cmd pager $~/.config/lf/pv.sh $f | less -R
map <f-3> push :pager<enter>
map i push :pager<enter>

map <f-4> $$EDITOR $f
map <f-5> copy
# mkdir
cmd mkdir %mkdir "$@"
map <f-7> push :mkdir<space>
map <f-8> push :delete<enter>


# execute current file (must be executable)
#map x $$f
#map X !$f

# dedicated keys for file opener actions
map o $mimeopen $f
map O $mimeopen --ask $f

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do setsid mimeo -q $f > /dev/null 2> /dev/null & done;;
    esac
}}


# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unar $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
        *.gzip) gunzip $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}


# Make search convenient.
cmd cmd-search-enable-bindings :{{
	cmap <tab> cmd-search-descend
	cmap <enter> cmd-search-stop-and-enter
	cmap <esc> cmd-search-abort
	cmap <c-j> search-next
	cmap <c-k> search-prev
    cmap <f-3> search-next
}}
cmd cmd-search-disable-bindings :{{
	cmap <tab> cmd-complete
	cmap <enter> cmd-enter
	cmap <esc> cmd-escape
}}
cmd cmd-search-abort :{{
	cmd-search-disable-bindings
	cmd-escape
}}
cmd cmd-search-stop-and-enter :{{
	cmd-search-disable-bindings
	open
}}
cmd cmd-search-descend :{{
	# For files, this should stop instead...
	open
	search
}}
cmd start-search :{{
	cmd-search-enable-bindings
	search
}}
map f start-search

# Yank paths into your clipboard
cmd yank-dirname ${{
    dirname -- "$f" | tr -d '\n' | xclip -i -selection clipboard
}}

cmd yank-path ${{
    if [ -n "$fs" ]; then echo "$fs"; else echo "$f" | tr -d '\n'; fi |
      xclip -i -selection clipboard
}}

cmd yank-basename ${{
    if [ -n "$fs" ]; then
      echo "$fs" | xargs -r -d '\n' basename -a --
    else
      basename -- "$f" | tr -d '\n'
    fi | xclip -i -selection clipboard
}}

cmd yank-basename-without-extension ${{
    echo "$fx" |
      xargs -r -d '\n' basename -a |
      awk -e '{
        for (i=length($0); i > 0; i--) {
          if (substr($0, i, 1) == ".") {
            if (i == 1) print $0
            else print substr($0, 0, i-1)

            break
          }
        }

        if (i == 0)
          print $0
      }' |
      if [ -n "$fs" ]; then cat; else tr -d '\n'; fi |
      xclip -i -selection clipboard
}}

# Share any file 256MiB limit
# returned url wil be appended to clipboard (linux) edit to pbcopy for osx
cmd share ${{   curl -F"file=@$fx" https://0x0.st | xclip -selection c
}}

# Put lf into background
# You might be missing the possibility to put the lf job into the background with the default ctrl and z keys.
map <c-z> $ kill -STOP $PPID

